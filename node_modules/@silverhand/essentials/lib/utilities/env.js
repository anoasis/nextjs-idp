"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isNode = exports.assertEnv = exports.getEnvAsStringArray = exports.getEnv = void 0;
const assert_1 = require("./assert");
// Browsers don't have `process`
// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
const getEnv = (key, fallback = '') => { var _a; return (_a = process === null || process === void 0 ? void 0 : process.env[key]) !== null && _a !== void 0 ? _a : fallback; };
exports.getEnv = getEnv;
const getEnvAsStringArray = (envKey, fallback = []) => {
    const rawValue = (0, exports.getEnv)(envKey);
    if (!rawValue) {
        return fallback;
    }
    return rawValue
        .split(',')
        .map((value) => value.trim())
        .filter(Boolean);
};
exports.getEnvAsStringArray = getEnvAsStringArray;
const assertEnv = (key) => {
    // Browsers don't have `process`
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    const value = process === null || process === void 0 ? void 0 : process.env[key];
    (0, assert_1.assert)(value, new Error(`env variable ${key} not found`));
    return value;
};
exports.assertEnv = assertEnv;
const isNode = () => typeof window === 'undefined';
exports.isNode = isNode;
