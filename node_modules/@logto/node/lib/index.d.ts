import BaseClient, { IdTokenClaims, UserInfoResponse, LogtoConfig, ClientAdapter } from "@logto/client";
declare module 'http' {
    interface IncomingMessage {
        user: LogtoContext;
    }
}
export type LogtoContext = {
    isAuthenticated: boolean;
    claims?: IdTokenClaims;
    accessToken?: string;
    userInfo?: UserInfoResponse;
};
export type GetContextParameters = {
    fetchUserInfo?: boolean;
    getAccessToken?: boolean;
    resource?: string;
};
export type { IdTokenClaims, LogtoErrorCode, LogtoConfig, LogtoClientErrorCode, Storage, StorageKey, } from '@logto/client';
export { LogtoError, OidcError, Prompt, LogtoRequestError, LogtoClientError, ReservedScope, UserScope, } from '@logto/client';
export default class LogtoClient extends BaseClient {
    constructor(config: LogtoConfig, adapter: Pick<ClientAdapter, 'navigate' | 'storage'>);
    getContext: ({ getAccessToken, resource, fetchUserInfo, }?: GetContextParameters) => Promise<LogtoContext>;
}

//# sourceMappingURL=index.d.ts.map
