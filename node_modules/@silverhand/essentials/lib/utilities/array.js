"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deduplicate = exports.repeat = exports.normalizeValueToStringArray = void 0;
const normalizeValueToStringArray = (value) => {
    if (value) {
        return Array.isArray(value) ? value : [value];
    }
    return [];
};
exports.normalizeValueToStringArray = normalizeValueToStringArray;
// Disable FP rules here to use the performant approach while keep the function itself "FP"
/* eslint-disable @silverhand/fp/no-let, @silverhand/fp/no-mutation */
const repeat = (times, initial, iterate) => {
    let result = initial;
    while (times--) {
        result = iterate(result);
    }
    return result;
};
exports.repeat = repeat;
/* eslint-enable @silverhand/fp/no-let, @silverhand/fp/no-mutation */
const deduplicate = (array) => [...new Set(array)];
exports.deduplicate = deduplicate;
